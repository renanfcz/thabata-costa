// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid()) @map("_id")
  name String
  email String
  password String
  createdAt DateTime @default(now())
}

model Client {
  id            String       @id @default(cuid()) @map("_id")
  name          String
  cpf           String
  dateBirth     DateTime
  celphone      String
  state         String
  city          String
  street        String
  number        Int
  complement    String
  indications   Indication[]
  createdAt     DateTime     @default(now())
  knowUs        String
  socialMedia   String
  socialMediaId String
  sales         Sale[]
  clientStatus  String       @default("Ativo")

  @@map("clients")
}

model Indication {
  id            String  @id @default(cuid()) @map("_id")
  name          String
  celphone      String
  socialMedia   String
  socialMediaId String
  client        Client? @relation(fields: [clientId], references: [id])
  clientId      String?

  @@map("indication")
}

model Sale {
  id           String     @id @default(cuid()) @map("_id")
  protocolName String
  protocolDesc String
  saleItems    SaleItem[]
  client       Client?    @relation(fields: [clientId], references: [id])
  clientId     String?
  createdAt    DateTime   @default(now())
  paymentType  String

  @@map("sale")
}

model SaleItem {
  id          String    @id @default(cuid()) @map("_id")
  procedure   Procedure @relation(fields: [procedureId], references: [id])
  procedureId String
  value       Float
  discount    Float
  sale        Sale?     @relation(fields: [saleId], references: [id])
  saleId      String?
  sessions    Session[]
  sessionsNum Int

  @@map("saleItem")
}

model Procedure {
  id       String     @id @default(cuid()) @map("_id")
  name     String     @unique
  price    Float
  saleItem SaleItem[]
  color    String

  @@map("procedures")
}

model Session {
  id         String    @id @default(cuid()) @map("_id")
  initDate   DateTime
  finalDate  DateTime
  obs        String?   @default("")
  saleItem   SaleItem? @relation(fields: [saleItemId], references: [id])
  saleItemId String?

  @@map("sessions")
}
